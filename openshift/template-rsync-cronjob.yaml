kind: Template
apiVersion: v1
metadata:
  name: rsync-cronjob
  annotations:
    description: >
      Rsync file or folder between a volume and a remote host.

parameters:
- name: CRONJOB_NAME
  value: ""
  description: "Name for the CronJob and other create resources"
- name: RSYNC_IMAGESTREAM
  value: "rsync"
  description: "ImageStream that contains the rsync image (import it from the dockerhub first)"
- name: SCHEDULE
  value: "0 3 * * *"
  description: "Schedule in cron format"
- name: PRIVKEY_SECRET_NAME
  value: ""
  description: "Name of the OpenShift secret that contains the ssh private key used to access remote hosts"
- name: PRIVKEY_SECRET_KEY
  value: ""
  description: "Key within the secret that contains the ssh private key"
- name: KNOWN_HOSTS_CONFIGMAP_NAME
  value: ""
  description: "Name of the ConfigMap containing the known_hosts file"
- name: KNOWN_HOSTS_CONFIGMAP_KEY
  value: ""
  description: "Key within the ConfigMap that contains the known_hosts file"
- name: PVC_NAME
  value: ""
  description: "PhysicalVolumeClaim to mount into the rsync container"
- name: PVC_TARGET
  value: "/m/"
  description: "Path inside the rsync container to mount the PVC to"
- name: RSYNC_SOURCE
  value: "/m/"
  description: "Rsync source. E.g. /m/some-folder/ or user@server.example.org"
- name: RSYNC_TARGET
  value: "<rsync target>"
  description: "Target for rsync. E.g. /m/some-folder/ or user@server.example.org"
- name: RSYNC_OPTIONS
  value: "-avz"
  description: "Command line options to pass to rsync"

objects:
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: "${CRONJOB_NAME}"
  spec:
    schedule: "${SCHEDULE}"
    jobTemplate:
      spec:
        template:
          metadata:
          spec:
            containers:
              - name: rsync
                image: "${RSYNC_IMAGESTREAM}:latest"
                imagePullPolicy: Always
                env:
                  - name: RSYNC_SOURCE
                    value: "${RSYNC_SOURCE}"
                  - name: RSYNC_TARGET
                    value: "${RSYNC_TARGET}"
                  - name: RSYNC_OPTIONS
                    value: "${RSYNC_OPTIONS}"
                  - name: SSH_HOST_KEYS
                    value: "${SSH_HOST_KEYS}"
                  - name: SSH_PRIVATE_KEY
                    valueFrom:
                      secretKeyRef:
                        name: "${PRIVKEY_SECRET_NAME}"
                        key: "${PRIVKEY_SECRET_KEY}"
                  - name: SSH_KNOWN_HOSTS
                    valueFrom:
                      configMapKeyRef:
                        name: "${KNOWN_HOSTS_CONFIGMAP_NAME}"
                        key: "${KNOWN_HOSTS_CONFIGMAP_KEY}"
                volumeMounts:
                  - name: volume
                    mountPath: "${PVC_TARGET}"
            volumes:
              - name: volume
                persistentVolumeClaim:
                  claimName: "${PVC_NAME}"
            restartPolicy: OnFailure

